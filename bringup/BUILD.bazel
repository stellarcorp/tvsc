filegroup(
    name = "linker_script",
    srcs = select({
        "//platforms:nucleo_l412kb_board": [
            "//toolchain/nucleo_l4:stm32l412xx_flash_linker_script",
        ],
        "//platforms:nucleo_l432kc_board": [
            "//toolchain/nucleo_l4:stm32l432xx_flash_linker_script",
        ],
        "//platforms:nucleo_l452re_board": [
            "//toolchain/nucleo_l4:stm32l452xx_flash_linker_script",
        ],
    }),
    target_compatible_with = [
        "@platforms//os:none",
    ],
)

cc_library(
    name = "tasks",
    hdrs = [
        "blink.h",
        "dac_demo.h",
        "random_blink.h",
    ],
    deps = [
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//random",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "blink.elf",
    srcs = [
        "blink.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "blink_multiple_leds.elf",
    srcs = [
        "blink_multiple_leds.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "random_blink.elf",
    srcs = [
        "random_blink.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//random",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "adc_demo.elf",
    srcs = [
        "adc_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//platforms:no_dac": ["@platforms//:incompatible"],
        "//platforms:no_adc": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "streaming_adc.elf",
    srcs = [
        "streaming_adc.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//platforms:no_dac": ["@platforms//:incompatible"],
        "//platforms:no_adc": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "dac_demo.elf",
    srcs = [
        "dac_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//platforms:no_dac": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//scheduler",
        "//time",
    ],
)

cc_binary(
    name = "power_demo.elf",
    srcs = [
        "power_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//time",
    ],
)

cc_binary(
    name = "timer_demo.elf",
    srcs = [
        "timer_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "//platforms:no_gpio": ["@platforms//:incompatible"],
        "//platforms:no_debug_led": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//hal/timer",
    ],
)

cc_binary(
    name = "systick_blink_demo.elf",
    srcs = [
        "systick_blink_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "@platforms//os:none": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//time",
    ],
)

cc_binary(
    name = "systick_blink_demo",
    srcs = [
        "systick_blink_demo.cc",
    ],
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/gpio",
        "//time",
    ],
)

cc_binary(
    name = "watchdog_demo.elf",
    srcs = [
        "watchdog_demo.cc",
    ],
    additional_linker_inputs = [
        ":linker_script",
    ],
    linkopts = ["-Wl,-T$(execpath :linker_script)"],
    target_compatible_with = select({
        "@platforms//os:none": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/watchdog",
        "//time",
    ],
)

cc_binary(
    name = "watchdog_demo",
    srcs = [
        "watchdog_demo.cc",
    ],
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":tasks",
        "//hal",
        "//hal/board",
        "//hal/watchdog",
        "//time",
    ],
)
