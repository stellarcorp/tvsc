cc_library(
    name = "hal_headers",
    srcs = [
        "error.cc",
    ],
    hdrs = [
        "error.h",
        "peripheral.h",
        "peripheral_id.h",
        "register.h",
    ],
)

cc_library(
    name = "hal",
    # We don't want this module to be used directly except by its subpackages.
    visibility = ["//hal:__subpackages__"],
    deps = [
        "//bits",
        ":hal_headers",
        ":irq",
    ] + select({
        "//platforms:stm32_core": [
            ":stm32_peripherals",
        ],
        "//conditions:default": [
        ],
    }),
)

cc_library(
    name = "irq",
    hdrs = [
        "irq.h",
    ],
    deps = select({
        "//platforms:stm32_core": [
            ":irq_arm",
        ],
        "@platforms//os:linux": [
            ":irq_noop",
        ],
        "//conditions:default": [
        ],
    }),
)

cc_library(
    name = "irq_arm",
    hdrs = ["irq_arm.h"],
    target_compatible_with = [
        "@platforms//cpu:armv7e-mf",
        "@platforms//os:none",
    ],
)

cc_library(
    name = "irq_noop",
    hdrs = ["irq_noop.h"],
    target_compatible_with = [
        "@platforms//os:linux",
    ],
)

cc_library(
    name = "stm32_peripherals",
    hdrs = [
        "stm32_peripheral_ids.h",
    ],
    target_compatible_with = [
        "//platforms:stm32_core",
    ],
    deps = [
        ":hal_headers",
    ],
)

cc_test(
    name = "register_test",
    srcs = ["register_test.cc"],
    deps = [
        ":hal",
        "//bits",
        "//third_party/gtest",
    ],
)
