cc_library(
    name = "rcc_headers",
    hdrs = [
        "rcc.h",
    ],
    deps = [
        "//hal/gpio",
    ],
)

cc_library(
    name = "rcc",
    target_compatible_with = select({
        "//platforms:stm32_core": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        ":rcc_headers",
    ] + select({
        "//platforms:stm32h7xx": [
            ":stm32h7xx_rcc",
        ],
        "//platforms:stm32l4xx": [
            ":stm32l4xx_rcc",
        ],
    }),
)

cc_library(
    name = "stm32h7xx_rcc",
    srcs = [
        "stm32h7xx_rcc.cc",
    ],
    hdrs = [
        "stm32h7xx_rcc.h",
    ],
    target_compatible_with = [
        "//platforms:stm32h7xx",
    ],
    deps = [
        ":rcc_headers",
        "//hal",
        "//hal/adc",
        "//hal/gpio",
        "//hal/time",
        "//third_party/stm32",
    ],
)

cc_library(
    name = "stm32l4xx_rcc",
    srcs = [
        "stm32l4xx_rcc.cc",
    ],
    hdrs = [
        "stm32l4xx_rcc.h",
    ],
    target_compatible_with = [
        "//platforms:stm32l4xx",
    ],
    deps = [
        ":rcc_headers",
        "//hal",
        "//hal/adc",
        "//hal/gpio",
        "//hal/time",
        "//third_party/stm32",
    ],
)
