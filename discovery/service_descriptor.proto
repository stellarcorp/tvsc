syntax = "proto3";

package tvsc.discovery;

message IPv4Address {
  // IPv4 address as an unsigned 32-bit integer in network byte order.
  fixed32 address = 1;
}

message IPv6Address {
  // TODO(james): Change this structure to use a byte array to line up with struct
  // sockaddr_in6.sin6_addr. IPv6 address as four unsigned 32-bit integers in network byte order.
  fixed32 address_0 = 1;  // Highest order bytes.
  fixed32 address_1 = 2;
  fixed32 address_2 = 3;
  fixed32 address_3 = 4;  // Lowest order bytes.
}

message NetworkAddress {
  oneof address {
    IPv4Address ipv4 = 1;
    IPv6Address ipv6 = 2;
  }
  int32 interface_index = 3;
  string interface_name = 4;
}

message ServerDetails {
  string hostname = 1;
  NetworkAddress address = 2;
  int32 port = 3;
}

message ServiceDescriptor {
  // This service_type definition allows for any service type. Please use service type helper
  // methods/static definitions/etc. to constrain the names of the services to the set of types that
  // are interesting to the application.
  string service_type = 1;
  string domain = 2;

  // Servers which provide this service.
  repeated ServerDetails servers = 3;
}

message ServiceSet {
  string canonical_name = 1;
  string published_name = 2;
  repeated ServiceDescriptor services = 3;
}
