stages:
  - force_cache_hydration
  - test_optimized

variables:
  CACHE_ROOT_PARENT: "$CI_BUILDS_DIR"
  CACHE_DIR_NAME: ".cache"
  CACHE_ROOT: "$CACHE_ROOT_PARENT/$CACHE_DIR_NAME"
  LOCAL_CACHE_ROOT: "$CACHE_DIR_NAME"
  LOCAL_BAZEL_CACHE: "$LOCAL_CACHE_ROOT/bazel"
  LOCAL_BAZELISK_CACHE: "$LOCAL_CACHE_ROOT/bazelisk"

x86_64-cache-hydration:
  stage: force_cache_hydration
  cache:
    key: x86_64_cache
    paths:
      - "$LOCAL_BAZEL_CACHE"
      - "$LOCAL_BAZELISK_CACHE"
  before_script:
    - mkdir -p "$CACHE_ROOT"
    - if [ -f "$LOCAL_CACHE_ROOT" ]; then tar cf - "$LOCAL_CACHE_ROOT" | (cd "$CACHE_ROOT_PARENT"; tar xf -); fi
    - rm -rf "$LOCAL_CACHE_ROOT"
  script:
    - find "$CACHE_ROOT" -type f

x86_64-optimized-tests:
  stage: test_optimized
  cache:
    key: x86_64_cache
    paths:
      - "$LOCAL_BAZEL_CACHE"
      - "$LOCAL_BAZELISK_CACHE"
  before_script:
    - mkdir -p "$CACHE_ROOT"
    - if [ -f "$LOCAL_CACHE_ROOT" ]; then tar cf - "$LOCAL_CACHE_ROOT" | (cd "$CACHE_ROOT_PARENT"; tar xf -); fi
    - rm -rf "$LOCAL_CACHE_ROOT"
  script:
    - find "$CACHE_ROOT" -type f
    - XDG_CACHE_HOME="$BAZELISK_CACHE" ./bazelisk-linux-amd64 --output_user_root="$BAZEL_CACHE" test -c opt //io/...
  after_script:
    - if [ -f "$CACHE_ROOT" ]; then (cd "$CACHE_ROOT_PARENT"; tar cf - "$CACHE_DIR_NAME") | tar xf -; fi
