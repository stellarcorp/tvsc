licenses(["notice"])

cc_library(
    name = "stm32_headers",
    hdrs = [
        "stm32.h",
    ],
)

cc_library(
    name = "stm32",
    target_compatible_with = select({
        "//platforms:stm32_core": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        ":stm32_headers",
    ] + select({
        "//platforms:stm32h743xx_mcu": [
            ":stm32h743xx",
        ],
        "//platforms:stm32l412xx_mcu": [
            ":stm32l412xx",
        ],
        "//platforms:stm32l432xx_mcu": [
            ":stm32l432xx",
        ],
        "//platforms:stm32l452xx_mcu": [
            ":stm32l452xx",
        ],
    }),
)

cc_library(
    name = "stm32h743xx",
    target_compatible_with = [
        "//platforms:stm32h743xx_mcu",
    ],
    deps = [
        "@com_github_stellarcorp_stm32_libraries//STM32Cube_FW_H7:nucleo_h743xx",
    ],
)

cc_library(
    name = "stm32l412xx",
    target_compatible_with = [
        "//platforms:stm32l412xx_mcu",
    ],
    deps = [
        "@com_github_stellarcorp_stm32_libraries//STM32Cube_FW_L4:nucleo_l412xx",
    ],
)

cc_library(
    name = "stm32l432xx",
    target_compatible_with = [
        "//platforms:stm32l432xx_mcu",
    ],
    deps = [
        "@com_github_stellarcorp_stm32_libraries//STM32Cube_FW_L4:nucleo_l432xx",
    ],
)

cc_library(
    name = "stm32l452xx",
    target_compatible_with = [
        "//platforms:stm32l452xx_mcu",
    ],
    deps = [
        "@com_github_stellarcorp_stm32_libraries//STM32Cube_FW_L4:nucleo_l452xx",
    ],
)
