package(default_visibility = ["//visibility:public"])

platform(
    name = "linux_x86_64_general",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        ":no_arduino_implementation",
        ":os_networking",
    ],
)

platform(
    name = "odroid_m1",
    constraint_values = [
        "@platforms//cpu:arm64",
        "@platforms//os:linux",
        ":wiringpi",
        ":os_networking",
        ":odroid_m1_board",
    ],
)

platform(
    name = "teensy41",
    constraint_values = [
        "@platforms//cpu:armv7e-mf",
        "@platforms//os:none",
        ":teensyduino",
        ":no_networking",
        ":teensy41_board",
    ],
)

platform(
    name = "teensy40",
    constraint_values = [
        "@platforms//cpu:armv7e-mf",
        "@platforms//os:none",
        ":teensyduino",
        ":no_networking",
        ":teensy40_board",
    ],
)

constraint_setting(name = "arduino_implementation")

constraint_value(
    name = "teensyduino",
    constraint_setting = "arduino_implementation",
)

constraint_value(
    # TODO(james): This doesn't quite map correctly. Ideally, we would enumerate the different
    # components of the Arduino API and have explicit implementation constraints for each component.
    name = "wiringpi",
    constraint_setting = "arduino_implementation",
)

constraint_value(
    name = "no_arduino_implementation",
    constraint_setting = "arduino_implementation",
)

constraint_setting(name = "networking_implementation")

constraint_value(
    name = "os_networking",
    constraint_setting = "networking_implementation",
)

constraint_value(
    name = "no_networking",
    constraint_setting = "networking_implementation",
)

constraint_setting(name = "board_type")

constraint_value(
    name = "teensy40_board",
    constraint_setting = "board_type",
)

constraint_value(
    name = "teensy41_board",
    constraint_setting = "board_type",
)

constraint_value(
    name = "odroid_m1_board",
    constraint_setting = "board_type",
)
