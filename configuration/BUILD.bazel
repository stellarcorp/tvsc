cc_library(
    name = "configuration",
    visibility = ["//visibility:public"],
    deps = [
        ":configuration_data_structures",
        ":serialization",
        "//string",
    ],
)

cc_library(
    name = "configuration_data_structures",
    srcs = [
        "allowed_values.cc",
        "system_configuration.cc",
        "system_definition.cc",
        "types.cc",
    ],
    hdrs = [
        "allowed_values.h",
        "system_configuration.h",
        "system_definition.h",
        "types.h",
    ],
    deps = [
        "//string",
    ],
)

cc_library(
    name = "serialization",
    visibility = ["//visibility:public"],
    deps = [":serialization_headers"] + select({
        "@platforms//os:none": [
            ":serialization_nanopb",
        ],
        "//conditions:default": [
            ":serialization_proto",
        ],
    }),
)

cc_library(
    name = "serialization_headers",
    hdrs = [
        "serialization.h",
    ],
    deps = [
        ":configuration_data_structures",
    ],
)

cc_library(
    name = "serialization_proto",
    srcs = [
        "serialization_proto.cc",
    ],
    target_compatible_with = select({
        "@platforms//os:none": [
            "@platforms//:incompatible",
        ],
        "//conditions:default": [],
    }),
    deps = [
        ":serialization_headers",
        "//configuration/proto:configuration_cc_proto",
    ],
)

cc_library(
    name = "serialization_nanopb",
    srcs = [
        "serialization_nanopb.cc",
    ],
    target_compatible_with = select({
        "@platforms//os:none": [],
        "//conditions:default": [
            "@platforms//:incompatible",
        ],
    }),
    deps = [
        ":serialization_headers",
        "//configuration/nanopb_proto:configuration_nano_cc_proto",
    ],
)

cc_library(
    name = "fake_configuration",
    testonly = True,
    hdrs = [
        "fake_systems.h",
    ],
)

cc_test(
    name = "system_configuration_test",
    srcs = ["system_configuration_test.cc"],
    deps = [
        ":configuration",
        ":fake_configuration",
        "//third_party/gtest",
    ],
)

cc_test(
    name = "system_definition_test",
    srcs = ["system_definition_test.cc"],
    deps = [
        ":configuration",
        ":fake_configuration",
        "//third_party/gtest",
    ],
)

cc_test(
    name = "function_test",
    srcs = ["function_test.cc"],
    deps = [
        ":configuration",
        ":fake_configuration",
        "//third_party/gtest",
    ],
)

cc_test(
    name = "allowed_values_test",
    srcs = ["allowed_values_test.cc"],
    deps = [
        ":configuration",
        ":fake_configuration",
        "//third_party/gtest",
    ],
)
